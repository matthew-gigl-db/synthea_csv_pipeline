# The main job for synthea_csv_pipeline.
resources:
  jobs:
    synthea_csv_pipeline_job:
      name: synthea_csv_pipeline_job

      trigger:
        # Run this job every day, exactly one day from the last run; see https://docs.databricks.com/api/workspace/jobs/create#trigger
        periodic:
          interval: 1
          unit: DAYS

      email_notifications:
        on_failure:
          - matthew.giglia@databricks.com

      tasks:
        - task_key: create_or_refresh_bronze
          description: Create a streaming key value pair style table for each streaming autoloaded resource of CSV files.    
          for_each_task:
            inputs: ${var.resources}
            concurrency: 25
            task:
              task_key: create_or_refresh_bronze_iteration
              notebook_task:
                notebook_path: ../src/create-or-refresh-bronze.ipynb
                base_parameters:
                  table_name: "{{input}}"
            warehouse_id: ${var.warehouse_id}
        
        # - task_key: refresh_pipeline
        #   depends_on:
        #     - task_key: notebook_task
        #   pipeline_task:
        #     pipeline_id: ${resources.pipelines.synthea_csv_pipeline_pipeline.id}

      parameters:
        catalog_name: 
          description: The name of the catalog to use for the workflow.  This should match the catalog, schema, and volume path where the Synthea CSV "landing" volume was created using synthea-on-dbx.  
          default: ${var.catalog}
        schema_name:
          description: The schema that contains the landing volume of subfolders for each CSV "resource type" that will be autoloaded to bronze and silver.  
          default: ${var.schema}
        full_refresh:
          description: Boolean value to perform a full refresh on the streaming tables.  Note that a full refresh on a streaming table will remove its history.  
          default: ${var.full_refresh}
        

        
      # job_clusters:
      #   - job_cluster_key: job_cluster
      #     new_cluster:
      #       spark_version: 15.4.x-scala2.12
      #       node_type_id: Standard_D3_v2
      #       autoscale:
      #           min_workers: 1
      #           max_workers: 4
